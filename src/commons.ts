import type * as plist from 'plist';
import { v4 } from 'uuid';

// eslint-disable-next-line no-undef
const { parse, build } = globalThis.plist;

const mobileconfig = `<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>PayloadContent</key>
        <array>
                <dict>
                        <key>FullScreen</key>
                        <true/>
                        <key>Icon</key>
                        <data>
                        iconData
                        </data>
                        <key>IsRemovable</key>
                        <true/>
                        <key>Label</key>
                        <string></string>
                        <key>PayloadDescription</key>
                        <string></string>
                        <key>PayloadDisplayName</key>
                        <string></string>
                        <key>PayloadIdentifier</key>
                        <string></string>
                        <key>PayloadType</key>
                        <string>com.apple.webClip.managed</string>
                        <key>PayloadUUID</key>
                        <string></string>
                        <key>PayloadVersion</key>
                        <integer>1</integer>
                        <key>Precomposed</key>
                        <true/>
                        <key>URL</key>
                        <string></string>
                </dict>
        </array>
        <key>PayloadDescription</key>
        <string></string>
        <key>PayloadDisplayName</key>
        <string></string>
        <key>PayloadIdentifier</key>
        <string></string>
        <key>PayloadOrganization</key>
        <string></string>
        <key>PayloadRemovalDisallowed</key>
        <false/>
        <key>PayloadType</key>
        <string>Configuration</string>
        <key>PayloadUUID</key>
        <string></string>
        <key>PayloadVersion</key>
        <integer>1</integer>
</dict>
</plist>`;
console.log(parse(mobileconfig));
export interface WebClip {
        name: string
        url: string
        icon: Uint8Array
        iconurl: string
}

export interface Config {
        config_name?: string
        config_author?: string
        webclips?: WebClip[]
}

export interface MCPlist {
        [k: string]: unknown
}

export function generateConfig(config: Config): string {
	const app_uuid = v4().toUpperCase();

	const PayloadContent = [];

	for (const p of config.webclips) {
		const payload_uuid = v4().toUpperCase();
		PayloadContent.push({
			FullScreen: true,
			Icon: p.icon,
			IsRemovable: true,
			Label: p.name,
			PayloadDescription: 'Web app bundled into a config, generated by @S0n1c_Dev',
			PayloadIdentifier: `com.apple.webClip.managed.${payload_uuid}`,
			PayloadType: 'com.apple.webClip.managed',
			PayloadUUID: payload_uuid,
			PayloadVersion: 1,
			Precomposed: true,
			URL: p.url
		});
	}

	const payload = {
		PayloadContent,
		PayloadDescription: 'This config was generated via WebClip Maker by @S0n1c_Dev.',
		PayloadDisplayName: config.config_name,
		PayloadIdentifier: `ca.s0n1c.ios.webclip.${app_uuid}`,
		PayloadOrganization: config.config_author,
		PayloadRemovalDisallowed: false,
		PayloadType: 'Configuration',
		PayloadUUID: app_uuid,
		PayloadVersion: 1
	};


	let res: string;
	try {
		res = build(payload as plist.PlistValue);
	} catch (e) {
		console.log(e);
		throw e;
	}
	console.log(res);
	return res;
}
