import type * as plist from 'plist'
import {v4} from 'uuid'

const {parse, build} = globalThis.plist;

let mobileconfig = `<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>PayloadContent</key>
        <array>
                <dict>
                        <key>FullScreen</key>
                        <true/>
                        <key>Icon</key>
                        <data>
                        iconData
                        </data>
                        <key>IsRemovable</key>
                        <true/>
                        <key>Label</key>
                        <string></string>
                        <key>PayloadDescription</key>
                        <string></string>
                        <key>PayloadDisplayName</key>
                        <string></string>
                        <key>PayloadIdentifier</key>
                        <string></string>
                        <key>PayloadType</key>
                        <string>com.apple.webClip.managed</string>
                        <key>PayloadUUID</key>
                        <string></string>
                        <key>PayloadVersion</key>
                        <integer>1</integer>
                        <key>Precomposed</key>
                        <true/>
                        <key>URL</key>
                        <string></string>
                </dict>
        </array>
        <key>PayloadDescription</key>
        <string></string>
        <key>PayloadDisplayName</key>
        <string></string>
        <key>PayloadIdentifier</key>
        <string></string>
        <key>PayloadOrganization</key>
        <string></string>
        <key>PayloadRemovalDisallowed</key>
        <false/>
        <key>PayloadType</key>
        <string>Configuration</string>
        <key>PayloadUUID</key>
        <string></string>
        <key>PayloadVersion</key>
        <integer>1</integer>
</dict>
</plist>`

export interface Config {
	name?: string
	url?: string
	icon?: string
	config_name?: string
        config_author?: string
}

export interface MCPlist {
        [k: string]: unknown
}

export function generateConfig(config: Config): string {

       

        let mc: MCPlist = parse(mobileconfig) as MCPlist
        let payload_uuid = v4().toUpperCase()
        let app_uuid = v4().toUpperCase()
        // mc.PayloadContent[0].Icon = 
        mc.PayloadContent[0].Label = config.name
        mc.PayloadContent[0].Icon = config.icon
        mc.PayloadContent[0].PayloadDescription = `Web app bundled into a config, generated by @S0n1c_Dev`
        mc.PayloadContent[0].PayloadIdentifier = `com.apple.webClip.managed.${payload_uuid}`
        mc.PayloadContent[0].PayloadUUID = payload_uuid
        mc.PayloadContent[0].URL = config.url;
        mc.PayloadDisplayName = config.config_name
        mc.PayloadDescription = `This config was generated via WebClip Maker by @S0n1c_Dev.`
        mc.PayloadIdentifier = `ca.s0n1c.ios.webclip.${app_uuid}`
        mc.PayloadOrganization = config.config_author
        mc.PayloadUUID = app_uuid


        console.log(mc)
        
        let res: string
        try {
            res = build(mc as plist.PlistValue)
        } catch(e) {
            console.log(e)
            throw e;
        }
        console.log(res)
        return res;
}
